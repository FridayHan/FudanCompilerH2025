Terminals unused in grammar

    '|'
    '&'
    '%'
    UMINUS


Grammar

    0 $accept: list $end

    1 list: ε
    2     | list stat '\n'
    3     | list error '\n'

    4 stat: expr
    5     | LETTER '=' expr

    6 expr: '(' expr ')'
    7     | expr '*' expr
    8     | expr '/' expr
    9     | expr '+' expr
   10     | expr '-' expr
   11     | LETTER
   12     | number

   13 number: DIGIT
   14       | number DIGIT


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 2 3
    '%' (37)
    '&' (38)
    '(' (40) 6
    ')' (41) 6
    '*' (42) 7
    '+' (43) 9
    '-' (45) 10
    '/' (47) 8
    '=' (61) 5
    '|' (124)
    error (256) 3
    DIGIT <a> (258) 13 14
    LETTER <a> (259) 5 11
    UMINUS (260)


Nonterminals, with rules where they appear

    $accept (17)
        on left: 0
    list (18)
        on left: 1 2 3
        on right: 0 2 3
    stat <s> (19)
        on left: 4 5
        on right: 2
    expr <e> (20)
        on left: 6 7 8 9 10 11 12
        on right: 4 5 6 7 8 9 10
    number <a> (21)
        on left: 13 14
        on right: 12 14


State 0

    0 $accept: • list $end

    $default  reduce using rule 1 (list)

    list  go to state 1


State 1

    0 $accept: list • $end
    2 list: list • stat '\n'
    3     | list • error '\n'

    $end    shift, and go to state 2
    error   shift, and go to state 3
    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 5
    '('     shift, and go to state 6

    stat    go to state 7
    expr    go to state 8
    number  go to state 9


State 2

    0 $accept: list $end •

    $default  accept


State 3

    3 list: list error • '\n'

    '\n'  shift, and go to state 10


State 4

   13 number: DIGIT •

    $default  reduce using rule 13 (number)


State 5

    5 stat: LETTER • '=' expr
   11 expr: LETTER •

    '='  shift, and go to state 11

    $default  reduce using rule 11 (expr)


State 6

    6 expr: '(' • expr ')'

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 12
    '('     shift, and go to state 6

    expr    go to state 13
    number  go to state 9


State 7

    2 list: list stat • '\n'

    '\n'  shift, and go to state 14


State 8

    4 stat: expr •
    7 expr: expr • '*' expr
    8     | expr • '/' expr
    9     | expr • '+' expr
   10     | expr • '-' expr

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    $default  reduce using rule 4 (stat)


State 9

   12 expr: number •
   14 number: number • DIGIT

    DIGIT  shift, and go to state 19

    $default  reduce using rule 12 (expr)


State 10

    3 list: list error '\n' •

    $default  reduce using rule 3 (list)


State 11

    5 stat: LETTER '=' • expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 12
    '('     shift, and go to state 6

    expr    go to state 20
    number  go to state 9


State 12

   11 expr: LETTER •

    $default  reduce using rule 11 (expr)


State 13

    6 expr: '(' expr • ')'
    7     | expr • '*' expr
    8     | expr • '/' expr
    9     | expr • '+' expr
   10     | expr • '-' expr

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18
    ')'  shift, and go to state 21


State 14

    2 list: list stat '\n' •

    $default  reduce using rule 2 (list)


State 15

    9 expr: expr '+' • expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 12
    '('     shift, and go to state 6

    expr    go to state 22
    number  go to state 9


State 16

   10 expr: expr '-' • expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 12
    '('     shift, and go to state 6

    expr    go to state 23
    number  go to state 9


State 17

    7 expr: expr '*' • expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 12
    '('     shift, and go to state 6

    expr    go to state 24
    number  go to state 9


State 18

    8 expr: expr '/' • expr

    DIGIT   shift, and go to state 4
    LETTER  shift, and go to state 12
    '('     shift, and go to state 6

    expr    go to state 25
    number  go to state 9


State 19

   14 number: number DIGIT •

    $default  reduce using rule 14 (number)


State 20

    5 stat: LETTER '=' expr •
    7 expr: expr • '*' expr
    8     | expr • '/' expr
    9     | expr • '+' expr
   10     | expr • '-' expr

    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    $default  reduce using rule 5 (stat)


State 21

    6 expr: '(' expr ')' •

    $default  reduce using rule 6 (expr)


State 22

    7 expr: expr • '*' expr
    8     | expr • '/' expr
    9     | expr • '+' expr
    9     | expr '+' expr •
   10     | expr • '-' expr

    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    $default  reduce using rule 9 (expr)


State 23

    7 expr: expr • '*' expr
    8     | expr • '/' expr
    9     | expr • '+' expr
   10     | expr • '-' expr
   10     | expr '-' expr •

    '*'  shift, and go to state 17
    '/'  shift, and go to state 18

    $default  reduce using rule 10 (expr)


State 24

    7 expr: expr • '*' expr
    7     | expr '*' expr •
    8     | expr • '/' expr
    9     | expr • '+' expr
   10     | expr • '-' expr

    $default  reduce using rule 7 (expr)


State 25

    7 expr: expr • '*' expr
    8     | expr • '/' expr
    8     | expr '/' expr •
    9     | expr • '+' expr
   10     | expr • '-' expr

    $default  reduce using rule 8 (expr)
