Function _^main^_^main() last_label=107 last_temp=144:
  Block: Entry Label: L107
    Exit labels: L102 
    LABEL L107; def: use: 
    MOVE t0:INT <- Const:32; def: 0 use: 
    MOVE_EXTCALL t0:PTR <- malloc(t0:INT); def: 0 1 2 3 use: 0 
    MOVE t10000:PTR <- t0:PTR; def: 10000 use: 0 
    MOVE t135:INT <- Const:7; def: 135 use: 
    STORE t135:INT -> Mem(t10000:PTR); def: use: 135 10000 
    MOVE_BINOP t12300:PTR <- (+, t10000:PTR, Const:4); def: 12300 use: 10000 
    MOVE t136:INT <- Const:6; def: 136 use: 
    STORE t136:INT -> Mem(t12300:PTR); def: use: 136 12300 
    MOVE_BINOP t12400:PTR <- (+, t10000:PTR, Const:8); def: 12400 use: 10000 
    MOVE t137:INT <- Const:3; def: 137 use: 
    STORE t137:INT -> Mem(t12400:PTR); def: use: 137 12400 
    MOVE_BINOP t12500:PTR <- (+, t10000:PTR, Const:12); def: 12500 use: 10000 
    MOVE t138:INT <- Const:0; def: 138 use: 
    STORE t138:INT -> Mem(t12500:PTR); def: use: 138 12500 
    MOVE_BINOP t12600:PTR <- (+, t10000:PTR, Const:16); def: 12600 use: 10000 
    MOVE t139:INT <- Const:5; def: 139 use: 
    STORE t139:INT -> Mem(t12600:PTR); def: use: 139 12600 
    MOVE_BINOP t12700:PTR <- (+, t10000:PTR, Const:20); def: 12700 use: 10000 
    MOVE t140:INT <- Const:9; def: 140 use: 
    STORE t140:INT -> Mem(t12700:PTR); def: use: 140 12700 
    MOVE_BINOP t12800:PTR <- (+, t10000:PTR, Const:24); def: 12800 use: 10000 
    MOVE t141:INT <- Const:1; def: 141 use: 
    STORE t141:INT -> Mem(t12800:PTR); def: use: 141 12800 
    MOVE_BINOP t12900:PTR <- (+, t10000:PTR, Const:28); def: 12900 use: 10000 
    MOVE t142:INT <- Const:2; def: 142 use: 
    STORE t142:INT -> Mem(t12900:PTR); def: use: 142 12900 
    MOVE t0:INT <- Const:8; def: 0 use: 
    MOVE_EXTCALL t0:PTR <- malloc(t0:INT); def: 0 1 2 3 use: 0 
    MOVE t10100:PTR <- t0:PTR; def: 10100 use: 0 
    MOVE_BINOP t13000:PTR <- (+, t10100:PTR, Const:4); def: 13000 use: 10100 
    LOAD t143:INT <- Mem(Name:b1^bubbleSort); def: 143 use: 
    STORE t143:INT -> Mem(t13000:PTR); def: use: 143 13000 
    MOVE t10200:INT <- Const:0; def: 10200 use: 
    MOVE_BINOP t13100:PTR <- (+, t10100:PTR, Const:4); def: 13100 use: 10100 
    LOAD t11100:PTR <- Mem(t13100:PTR); def: 11100 use: 13100 
    MOVE t11400:PTR <- t11100:PTR; def: 11400 use: 11100 
    MOVE t11300:PTR <- t10100:PTR; def: 11300 use: 10100 
    MOVE t11200:PTR <- t10000:PTR; def: 11200 use: 10000 
    LOAD t10600:INT <- Mem(t10000:PTR); def: 10600 use: 10000 
    MOVE t2:INT <- t10600:INT; def: 2 use: 10600 
    MOVE t1:PTR <- t11200:PTR; def: 1 use: 11200 
    MOVE t0:PTR <- t11300:PTR; def: 0 use: 11300 
    CALL bubbleSort[t11400:PTR] (t0:PTR, t1:PTR, t2:INT); def: 0 1 2 3 use: 0 1 2 11400 
    MOVE t10201:INT <- t10200:INT; def: 10201 use: 10200 
    JUMP L102; def: use: 
  Block: Entry Label: L102
    Exit labels: L103 L104 
    LABEL L102; def: use: 
    MOVE t11600:INT <- t10201:INT; def: 11600 use: 10201 
    LOAD t10700:INT <- Mem(t10000:PTR); def: 10700 use: 10000 
    CJUMP < t11600:INT t10700:INT? L103 : L104; def: use: 10700 11600 
  Block: Entry Label: L103
    Exit labels: L105 L106 
    LABEL L103; def: use: 
    MOVE t11800:PTR <- t10000:PTR; def: 11800 use: 10000 
    LOAD t10800:INT <- Mem(t10000:PTR); def: 10800 use: 10000 
    CJUMP >= t10201:INT t10800:INT? L105 : L106; def: use: 10201 10800 
  Block: Entry Label: L105
    Exit labels: 
    LABEL L105; def: use: 
    MOVE t0:INT <- Const:-1; def: 0 use: 
    EXTCALL exit(t0:INT); def: 0 1 2 3 use: 
  Block: Entry Label: L106
    Exit labels: L102 
    LABEL L106; def: use: 
    MOVE_BINOP t13200:INT <- (+, t10201:INT, Const:1); def: 13200 use: 10201 
    MOVE t144:INT <- Const:4; def: 144 use: 
    MOVE_BINOP t13300:INT <- (*, t13200:INT, t144:INT); def: 13300 use: 13200 144 
    MOVE_BINOP t13400:PTR <- (+, t11800:PTR, t13300:INT); def: 13400 use: 11800 13300 
    LOAD t11900:INT <- Mem(t13400:PTR); def: 11900 use: 13400 
    MOVE t0:INT <- t11900:INT; def: 0 use: 11900 
    EXTCALL putint(t0:INT); def: 0 1 2 3 use: 
    MOVE t0:INT <- Const:32; def: 0 use: 
    EXTCALL putch(t0:INT); def: 0 1 2 3 use: 
    MOVE_BINOP t10202:INT <- (+, t10201:INT, Const:1); def: 10202 use: 10201 
    MOVE t10201:INT <- t10202:INT; def: 10201 use: 10202 
    JUMP L102; def: use: 
  Block: Entry Label: L104
    Exit labels: 
    LABEL L104; def: use: 
    MOVE t0:INT <- Const:10; def: 0 use: 
    EXTCALL putch(t0:INT); def: 0 1 2 3 use: 
    MOVE t0:INT <- Const:0; def: 0 use: 
    RETURN t0:INT; def: use: 0 
Function b1^bubbleSort(t0, t1, t2) last_label=127 last_temp=165:
  Block: Entry Label: L127
    Exit labels: L102 L103 
    LABEL L127; def: use: 
    MOVE t104:INT <- t2:INT; def: 104 use: 2 
    MOVE t103:INT <- t1:INT; def: 103 use: 1 
    MOVE t102:INT <- t0:INT; def: 102 use: 0 
    MOVE t10000:INT <- Const:0; def: 10000 use: 
    MOVE t159:INT <- Const:1; def: 159 use: 
    CJUMP <= t104:INT t159:INT? L102 : L103; def: use: 104 159 
  Block: Entry Label: L102
    Exit labels: 
    LABEL L102; def: use: 
    MOVE t0:INT <- Const:0; def: 0 use: 
    RETURN t0:INT; def: use: 0 
  Block: Entry Label: L103
    Exit labels: L104 
    LABEL L103; def: use: 
    JUMP L104; def: use: 
  Block: Entry Label: L104
    Exit labels: L107 
    LABEL L104; def: use: 
    MOVE t10001:INT <- t10000:INT; def: 10001 use: 10000 
    JUMP L107; def: use: 
  Block: Entry Label: L107
    Exit labels: L108 L109 
    LABEL L107; def: use: 
    MOVE_BINOP t13100:INT <- (-, t104:INT, Const:1); def: 13100 use: 104 
    CJUMP < t10001:INT t13100:INT? L108 : L109; def: use: 10001 13100 
  Block: Entry Label: L108
    Exit labels: L110 L111 
    LABEL L108; def: use: 
    MOVE t11300:PTR <- t103:PTR; def: 11300 use: 103 
    LOAD t10600:INT <- Mem(t103:PTR); def: 10600 use: 103 
    CJUMP >= t10001:INT t10600:INT? L110 : L111; def: use: 10001 10600 
  Block: Entry Label: L110
    Exit labels: 
    LABEL L110; def: use: 
    MOVE t0:INT <- Const:-1; def: 0 use: 
    EXTCALL exit(t0:INT); def: 0 1 2 3 use: 
  Block: Entry Label: L111
    Exit labels: L112 L113 
    LABEL L111; def: use: 
    MOVE_BINOP t13200:INT <- (+, t10001:INT, Const:1); def: 13200 use: 10001 
    MOVE t160:INT <- Const:4; def: 160 use: 
    MOVE_BINOP t13300:INT <- (*, t13200:INT, t160:INT); def: 13300 use: 13200 160 
    MOVE_BINOP t13400:PTR <- (+, t11300:PTR, t13300:INT); def: 13400 use: 11300 13300 
    LOAD t11600:INT <- Mem(t13400:PTR); def: 11600 use: 13400 
    MOVE t11500:PTR <- t103:PTR; def: 11500 use: 103 
    LOAD t10700:INT <- Mem(t103:PTR); def: 10700 use: 103 
    MOVE_BINOP t13500:INT <- (+, t10001:INT, Const:1); def: 13500 use: 10001 
    CJUMP >= t13500:INT t10700:INT? L112 : L113; def: use: 10700 13500 
  Block: Entry Label: L112
    Exit labels: 
    LABEL L112; def: use: 
    MOVE t0:INT <- Const:-1; def: 0 use: 
    EXTCALL exit(t0:INT); def: 0 1 2 3 use: 
  Block: Entry Label: L113
    Exit labels: L124 L125 
    LABEL L113; def: use: 
    MOVE_BINOP t13600:INT <- (+, t10001:INT, Const:1); def: 13600 use: 10001 
    MOVE_BINOP t13700:INT <- (+, t13600:INT, Const:1); def: 13700 use: 13600 
    MOVE t161:INT <- Const:4; def: 161 use: 
    MOVE_BINOP t13800:INT <- (*, t13700:INT, t161:INT); def: 13800 use: 13700 161 
    MOVE_BINOP t13900:PTR <- (+, t11500:PTR, t13800:INT); def: 13900 use: 11500 13800 
    LOAD t14000:INT <- Mem(t13900:PTR); def: 14000 use: 13900 
    CJUMP > t11600:INT t14000:INT? L124 : L125; def: use: 11600 14000 
  Block: Entry Label: L124
    Exit labels: L116 L117 
    LABEL L124; def: use: 
    MOVE t11800:PTR <- t103:PTR; def: 11800 use: 103 
    LOAD t10800:INT <- Mem(t103:PTR); def: 10800 use: 103 
    CJUMP >= t10001:INT t10800:INT? L116 : L117; def: use: 10001 10800 
  Block: Entry Label: L116
    Exit labels: 
    LABEL L116; def: use: 
    MOVE t0:INT <- Const:-1; def: 0 use: 
    EXTCALL exit(t0:INT); def: 0 1 2 3 use: 
  Block: Entry Label: L117
    Exit labels: L118 L119 
    LABEL L117; def: use: 
    MOVE_BINOP t14100:INT <- (+, t10001:INT, Const:1); def: 14100 use: 10001 
    MOVE t162:INT <- Const:4; def: 162 use: 
    MOVE_BINOP t14200:INT <- (*, t14100:INT, t162:INT); def: 14200 use: 14100 162 
    MOVE_BINOP t14300:PTR <- (+, t11800:PTR, t14200:INT); def: 14300 use: 11800 14200 
    LOAD t10100:INT <- Mem(t14300:PTR); def: 10100 use: 14300 
    MOVE t12000:PTR <- t103:PTR; def: 12000 use: 103 
    LOAD t10900:INT <- Mem(t103:PTR); def: 10900 use: 103 
    CJUMP >= t10001:INT t10900:INT? L118 : L119; def: use: 10001 10900 
  Block: Entry Label: L118
    Exit labels: 
    LABEL L118; def: use: 
    MOVE t0:INT <- Const:-1; def: 0 use: 
    EXTCALL exit(t0:INT); def: 0 1 2 3 use: 
  Block: Entry Label: L119
    Exit labels: L120 L121 
    LABEL L119; def: use: 
    MOVE t12200:PTR <- t103:PTR; def: 12200 use: 103 
    LOAD t11000:INT <- Mem(t103:PTR); def: 11000 use: 103 
    MOVE_BINOP t14400:INT <- (+, t10001:INT, Const:1); def: 14400 use: 10001 
    CJUMP >= t14400:INT t11000:INT? L120 : L121; def: use: 11000 14400 
  Block: Entry Label: L120
    Exit labels: 
    LABEL L120; def: use: 
    MOVE t0:INT <- Const:-1; def: 0 use: 
    EXTCALL exit(t0:INT); def: 0 1 2 3 use: 
  Block: Entry Label: L121
    Exit labels: L122 L123 
    LABEL L121; def: use: 
    MOVE_BINOP t14500:INT <- (+, t10001:INT, Const:1); def: 14500 use: 10001 
    MOVE t163:INT <- Const:4; def: 163 use: 
    MOVE_BINOP t14600:INT <- (*, t14500:INT, t163:INT); def: 14600 use: 14500 163 
    MOVE_BINOP t14700:PTR <- (+, t12000:PTR, t14600:INT); def: 14700 use: 12000 14600 
    MOVE_BINOP t14800:INT <- (+, t10001:INT, Const:1); def: 14800 use: 10001 
    MOVE_BINOP t14900:INT <- (+, t14800:INT, Const:1); def: 14900 use: 14800 
    MOVE t164:INT <- Const:4; def: 164 use: 
    MOVE_BINOP t15000:INT <- (*, t14900:INT, t164:INT); def: 15000 use: 14900 164 
    MOVE_BINOP t15100:PTR <- (+, t12200:PTR, t15000:INT); def: 15100 use: 12200 15000 
    LOAD t15200:INT <- Mem(t15100:PTR); def: 15200 use: 15100 
    STORE t15200:INT -> Mem(t14700:PTR); def: use: 14700 15200 
    MOVE t12400:PTR <- t103:PTR; def: 12400 use: 103 
    LOAD t11100:INT <- Mem(t103:PTR); def: 11100 use: 103 
    MOVE_BINOP t15300:INT <- (+, t10001:INT, Const:1); def: 15300 use: 10001 
    CJUMP >= t15300:INT t11100:INT? L122 : L123; def: use: 11100 15300 
  Block: Entry Label: L122
    Exit labels: 
    LABEL L122; def: use: 
    MOVE t0:INT <- Const:-1; def: 0 use: 
    EXTCALL exit(t0:INT); def: 0 1 2 3 use: 
  Block: Entry Label: L123
    Exit labels: L126 
    LABEL L123; def: use: 
    MOVE_BINOP t15400:INT <- (+, t10001:INT, Const:1); def: 15400 use: 10001 
    MOVE_BINOP t15500:INT <- (+, t15400:INT, Const:1); def: 15500 use: 15400 
    MOVE t165:INT <- Const:4; def: 165 use: 
    MOVE_BINOP t15600:INT <- (*, t15500:INT, t165:INT); def: 15600 use: 15500 165 
    MOVE_BINOP t15700:PTR <- (+, t12400:PTR, t15600:INT); def: 15700 use: 12400 15600 
    STORE t10100:INT -> Mem(t15700:PTR); def: use: 10100 15700 
    JUMP L126; def: use: 
  Block: Entry Label: L125
    Exit labels: L126 
    LABEL L125; def: use: 
    JUMP L126; def: use: 
  Block: Entry Label: L126
    Exit labels: L107 
    LABEL L126; def: use: 
    MOVE_BINOP t10002:INT <- (+, t10001:INT, Const:1); def: 10002 use: 10001 
    MOVE t10001:INT <- t10002:INT; def: 10001 use: 10002 
    JUMP L107; def: use: 
  Block: Entry Label: L109
    Exit labels: 
    LABEL L109; def: use: 
    MOVE_BINOP t15800:PTR <- (+, t102:PTR, Const:4); def: 15800 use: 102 
    LOAD t12500:PTR <- Mem(t15800:PTR); def: 12500 use: 15800 
    MOVE t12900:PTR <- t12500:PTR; def: 12900 use: 12500 
    MOVE t12800:PTR <- t102:PTR; def: 12800 use: 102 
    MOVE t12700:PTR <- t103:PTR; def: 12700 use: 103 
    MOVE_BINOP t12600:INT <- (-, t104:INT, Const:1); def: 12600 use: 104 
    MOVE t2:INT <- t12600:INT; def: 2 use: 12600 
    MOVE t1:PTR <- t12700:PTR; def: 1 use: 12700 
    MOVE t0:PTR <- t12800:PTR; def: 0 use: 12800 
    MOVE_CALL t0:INT <- bubbleSort[t12900:PTR] (t0:PTR, t1:PTR, t2:INT); def: 0 1 2 3 use: 0 1 2 12900 
    MOVE t13000:INT <- t0:INT; def: 13000 use: 0 
    MOVE t0:INT <- t13000:INT; def: 0 use: 13000 
    RETURN t0:INT; def: use: 0 
