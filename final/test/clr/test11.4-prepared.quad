Function _^main^_^main() last_label=105 last_temp=130:
  Block: Entry Label: L105
    Exit labels: L100 L101 
    LABEL L105; def: use: 
    MOVE t0:INT <- Const:4; def: 0 use: 
    MOVE_EXTCALL t0:PTR <- malloc(t0:INT); def: 0 1 2 3 use: 0 
    MOVE t10000:PTR <- t0:PTR; def: 10000 use: 0 
    MOVE t126:INT <- Const:0; def: 126 use: 
    STORE t126:INT -> Mem(t10000:PTR); def: use: 126 10000 
    MOVE t0:INT <- Const:24; def: 0 use: 
    MOVE_EXTCALL t0:PTR <- malloc(t0:INT); def: 0 1 2 3 use: 0 
    MOVE t10100:PTR <- t0:PTR; def: 10100 use: 0 
    MOVE t127:INT <- Const:5; def: 127 use: 
    STORE t127:INT -> Mem(t10100:PTR); def: use: 127 10100 
    MOVE t0:INT <- Const:24; def: 0 use: 
    MOVE_EXTCALL t0:PTR <- malloc(t0:INT); def: 0 1 2 3 use: 0 
    MOVE t10200:PTR <- t0:PTR; def: 10200 use: 0 
    MOVE t128:INT <- Const:5; def: 128 use: 
    STORE t128:INT -> Mem(t10200:PTR); def: use: 128 10200 
    LOAD t10700:INT <- Mem(t10100:PTR); def: 10700 use: 10100 
    LOAD t10800:INT <- Mem(t10200:PTR); def: 10800 use: 10200 
    CJUMP != t10700:INT t10800:INT? L100 : L101; def: use: 10700 10800 
  Block: Entry Label: L100
    Exit labels: 
    LABEL L100; def: use: 
    MOVE t0:INT <- Const:-1; def: 0 use: 
    EXTCALL exit(t0:INT); def: 0 1 2 3 use: 
  Block: Entry Label: L101
    Exit labels: L102 
    LABEL L101; def: use: 
    MOVE_BINOP t11800:INT <- (+, t10700:INT, Const:1); def: 11800 use: 10700 
    MOVE t129:INT <- Const:4; def: 129 use: 
    MOVE_BINOP t11600:INT <- (*, t11800:INT, t129:INT); def: 11600 use: 11800 129 
    MOVE t0:INT <- t11600:INT; def: 0 use: 11600 
    MOVE_EXTCALL t0:PTR <- malloc(t0:INT); def: 0 1 2 3 use: 0 
    MOVE t10900:PTR <- t0:PTR; def: 10900 use: 0 
    STORE t10700:INT -> Mem(t10900:PTR); def: use: 10700 10900 
    MOVE t11000:INT <- Const:4; def: 11000 use: 
    MOVE_BINOP t11900:INT <- (+, t10700:INT, Const:1); def: 11900 use: 10700 
    MOVE t130:INT <- Const:4; def: 130 use: 
    MOVE_BINOP t11100:INT <- (*, t11900:INT, t130:INT); def: 11100 use: 11900 130 
    MOVE t11001:INT <- t11000:INT; def: 11001 use: 11000 
    JUMP L102; def: use: 
  Block: Entry Label: L102
    Exit labels: L103 L104 
    LABEL L102; def: use: 
    CJUMP < t11001:INT t11100:INT? L103 : L104; def: use: 11001 11100 
  Block: Entry Label: L103
    Exit labels: L102 
    LABEL L103; def: use: 
    MOVE_BINOP t12000:PTR <- (+, t10900:PTR, t11001:INT); def: 12000 use: 10900 11001 
    MOVE_BINOP t12100:PTR <- (+, t10100:PTR, t11001:INT); def: 12100 use: 10100 11001 
    LOAD t12200:INT <- Mem(t12100:PTR); def: 12200 use: 12100 
    MOVE_BINOP t12300:PTR <- (+, t10200:PTR, t11001:INT); def: 12300 use: 10200 11001 
    LOAD t12400:INT <- Mem(t12300:PTR); def: 12400 use: 12300 
    MOVE_BINOP t12500:INT <- (+, t12200:INT, t12400:INT); def: 12500 use: 12200 12400 
    STORE t12500:INT -> Mem(t12000:PTR); def: use: 12000 12500 
    MOVE_BINOP t11002:INT <- (+, t11001:INT, Const:4); def: 11002 use: 11001 
    MOVE t11001:INT <- t11002:INT; def: 11001 use: 11002 
    JUMP L102; def: use: 
  Block: Entry Label: L104
    Exit labels: 
    LABEL L104; def: use: 
    MOVE t10001:PTR <- t10900:PTR; def: 10001 use: 10900 
    MOVE t0:INT <- Const:0; def: 0 use: 
    RETURN t0:INT; def: use: 0 
