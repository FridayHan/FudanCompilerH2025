Function _^main^_^main():
  Block: Entry Label: L100
    Exit labels: 
    LABEL L100; def: use: 
    MOVE_EXTCALL t100:PTR <- malloc(Const:16); def: 100 use: 
    MOVE_BINOP t108:PTR <- (+, t100:PTR, Const:12); def: 108 use: 100 
    STORE Name:c2^m2 -> Mem(t108:PTR); def: use: 108 
    MOVE_BINOP t109:PTR <- (+, t100:PTR, Const:8); def: 109 use: 100 
    STORE Name:c1^m1 -> Mem(t109:PTR); def: use: 109 
    MOVE_BINOP t110:PTR <- (+, t100:PTR, Const:4); def: 110 use: 100 
    STORE Const:100 -> Mem(t110:PTR); def: use: 110 
    MOVE_BINOP t111:PTR <- (+, t100:PTR, Const:12); def: 111 use: 100 
    LOAD t106:PTR <- Mem(t111:PTR); def: 106 use: 111 
    MOVE_CALL t107:INT <- m2[t106:PTR] (t100:PTR, Const:10); def: 107 use: 106 100 
    RETURN t107:INT; def: use: 107 
Function c1^m1(t100, t101):
  Block: Entry Label: L100
    Exit labels: 
    LABEL L100; def: use: 
    MOVE_BINOP t104:PTR <- (+, t100:PTR, Const:0); def: 104 use: 100 
    STORE t101:INT -> Mem(t104:PTR); def: use: 101 104 
    RETURN t100:PTR; def: use: 100 
Function c2^m2(t100, t101):
  Block: Entry Label: L100
    Exit labels: 
    LABEL L100; def: use: 
    MOVE_BINOP t107:PTR <- (+, t100:PTR, Const:8); def: 107 use: 100 
    LOAD t105:PTR <- Mem(t107:PTR); def: 105 use: 107 
    MOVE_CALL t106:PTR <- m1[t105:PTR] (t100:PTR, t101:INT); def: 106 use: 105 100 101 
    MOVE_BINOP t108:PTR <- (+, t106:PTR, Const:0); def: 108 use: 106 
    LOAD t109:INT <- Mem(t108:PTR); def: 109 use: 108 
    MOVE_BINOP t110:PTR <- (+, t100:PTR, Const:4); def: 110 use: 100 
    LOAD t111:INT <- Mem(t110:PTR); def: 111 use: 110 
    MOVE_BINOP t112:INT <- (+, t109:INT, t111:INT); def: 112 use: 109 111 
    RETURN t112:INT; def: use: 112 
